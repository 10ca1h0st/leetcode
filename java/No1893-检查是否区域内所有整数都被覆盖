class Solution {
    public boolean isCovered(int[][] ranges, int left, int right) {
        Arrays.sort(ranges, new Comparator<int[]>() {
            @Override
            public int compare(int[] r1, int[] r2) {
                if (r1[0] < r2[0]) {
                    return -1;
                } else if (r1[0] > r2[0]) {
                    return 1;
                } else {
                    return r1[1] - r2[1];
                }
            }
        });
        List<int[]> newRanges = new ArrayList<>();
        int start = 0;
        int end = -1;
        for (int[] range : ranges) {
            if (end < start) {
                // 初始
                start = range[0];
                end = range[1];
            } else {
                if (range[0] > end + 1) {
                    newRanges.add(new int[] {start, end});
                    start = range[0];
                    end = range[1];
                } else {
                    end = Math.max(end, range[1]);
                }
            }
        }
        if (end >= start) {
            newRanges.add(new int[] {start, end});
        }

        for (int[] range : newRanges) {
            if (left >= range[0] && right <= range[1]) {
                return true;
            }
        }
        return false;
    }
}